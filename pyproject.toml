[tool.poetry]
name = "sslcommerz-sdk"
version = "0.0.0"
description = "Sslcommerz SDK for python"
readme = "README.rst"
authors = ["Munim Munna <6266677+monim67@users.noreply.github.com>"]
repository = "https://github.com/monim67/sslcommerz-sdk"
documentation = "https://sslcommerz-sdk.readthedocs.io/en/latest/"
packages = [{ include = "*", from = "src" }]
license = "MIT"
keywords = ["sslcommerz", "python", "sdk"]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
    "Environment :: Web Environment",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
]

[tool.poetry.dependencies]
python = "^3.7"
requests = "^2.22"
marshmallow = "^3.0.0"

[tool.poetry.group.build.dependencies]
sqlalchemy = "^1.3.22"
pynamodb = "^4.3.3"
pytest-django = "^4.5.2"
pytest-dotenv = "^0.5.2"
moto = "^4.0.13"
black = "^22.6.0"
isort = "^5.10.1"
pydocstyle = { extras = ["toml"], version = "^6.1.1" }
mypy = "*"
django-stubs = "^1.12.0"
coverage = { extras = ["toml"], version = "^6.5.0" }
rstcheck = "^6.1.0"
sphinx = "^4.3.2"
poethepoet = "^0.15.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
tox = "^3.24.5"
sphinx-rtd-theme = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry_bumpversion.file."src/sslcommerz_sdk/__init__.py"]

[tool.black]
exclude = "migrations/*"

[tool.isort]
py_version = "37"
profile = "black"

[tool.pydocstyle]
convention = "google"
add_select = "D401,D404"

[tool.mypy]
python_version = "3.7"
namespace_packages = true
strict = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = ["dev.myapp.migrations.*"]
ignore_errors = true

[tool.django-stubs]
django_settings_module = "dev.mysite.settings"

[tool.pytest.ini_options]
pythonpath = "."                               # pytest-django needs it to find dev module
django_find_project = false
DJANGO_SETTINGS_MODULE = "dev.mysite.settings"
addopts = "--reuse-db"
testpaths = ["tests"]
env_files = [".env", ".env.defaults"]

[tool.coverage.run]
command_line = "-m pytest"
source = ["sslcommerz_sdk"]
parallel = true

[tool.coverage.paths]
source = ["src/sslcommerz_sdk", "**/site-packages/sslcommerz_sdk"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{311,310,39,38,37}

[testenv]
allowlist_externals = poetry
skip_install = true
commands =
    poetry install --no-root --only build
    pip install -c tests/pip-constraints.txt .
    poe lint
    pytest
"""

[tool.poe]
envfile = [".env.defaults", ".env"]

[tool.poe.tasks]
start = { cmd = "python dev/manage.py runserver localhost:8000", help = "Start dev server (press F5 on vscode)" }
docs = "poetry run make -C docs html"
lint = [
    # { cmd = "python -m black --check src tests dev" },
    # { cmd = "python -m isort --check-only src tests dev" },
    # { cmd = "mypy src tests dev" },
    # { cmd = "pydocstyle src" },
    { cmd = "rstcheck --report-level warning README.rst docs/*.rst" },
]
test-cov = [
    { cmd = "coverage run" },
    { cmd = "coverage combine" },
    { cmd = "coverage lcov -o coverage/lcov.info" },
    { cmd = "coverage report" },
]
